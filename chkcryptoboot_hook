#!/usr/bin/ash

check_mbr ()
{
	if [ -n "$BOOTDISK" -a -s /etc/chkcryptoboot/disk-head.sha512 ]; then
		dd if=$BOOTDISK of=/etc/chkcryptoboot/disk-head bs=446 count=1
		cd /etc/chkcryptoboot
		sha512sum -c disk-head.sha512
		if [ $? -ne 0 ]; then
			printf "\n\n"
			printf "\033[0;31mCHKCRYPTOBOOT ALERT\033[0m"
			printf "\n"
			printf "\033[0;31mCHANGES HAVE BEEN DETECTED IN THE 1st STAGE BOOTLOADER CODE INSTALLED IN THE MBR\033[0m"
			printf "\n"
			cd -
			return 1
		else
			printf "\033[0;32mOK:\033[0m verified bootloader 1st stage in MBR"
			printf "\n"
			cd -
			return 0
		fi
	fi
}

check_core ()
{
	if [ -n "$BOOTDISK" -a -s /etc/chkcryptoboot/grub-core.sha512 ]; then
		if [ -n "$BOOT_PARTITION" ]; then
			dd if=$BOOT_PARTITION of=/etc/chkcryptoboot/grub-core bs=512 count=62
		else
			dd if=$BOOTDISK of=/etc/chkcryptoboot/grub-core skip=1 bs=512 count=62
		fi
		cd /etc/chkcryptoboot
		sha512sum -c grub-core.sha512
		if [ $? -ne 0 ]; then
			printf "\n\n"
			printf "\033[0;31mCHKCRYPTOBOOT ALERT\033[0m"
			printf "\n"
			printf "\033[0;31mCHANGES HAVE BEEN DETECTED IN THE BOOTLOADER CORE\033[0m"
			printf "\n"
			cd -
			return 1
		else
			printf "\033[0;32mOK:\033[0m verified bootloader core"
			printf "\n"
			cd -
			return 0
		fi
	fi
}

check_efi ()
{
	if [ -n "$ESP_DIR" -a -s /etc/chkcryptoboot/efistub.sha512 ]; then
		tries=0
		while [ ! -b "$ESP_DEVICE" -a $tries -lt 10 ]; do 
			tries=$((tries+1))
			sleep 1
		done
		mount -t vfat $ESP_DEVICE $ESP_DIR
		sha512sum -c /etc/chkcryptoboot/efistub.sha512
		if [ $? -ne 0 ]; then
			printf "\n\n"
			printf "\033[0;31mCHKCRYPTOBOOT ALERT\033[0m"
			printf "\n"
			printf "\033[0;31mCHANGES HAVE BEEN DETECTED IN THE BOOTLOADER EFISTUB\033[0m"
			printf "\n"
			return 1
		else
			printf "\033[0;32mOK:\033[0m verified bootloader efistub"
			printf "\n"
			return 0
		fi
	fi
}

check_cmdline ()
{
	if [ -n "$CMDLINE_NAME" -a -n "$CMDLINE_VALUE" ]; then
		for param in `cat /proc/cmdline` ; do
			if [ $param = $CMDLINE_NAME=$CMDLINE_VALUE ]; then
				printf "\033[0;32mOK:\033[0m verified kernel cmdline parameters"
				printf "\n"
				return 0
			fi
		done
	fi
	printf "\n\n"
	printf "\033[0;31mCHKCRYPTOBOOT ALERT\033[0m"
	printf "\n"
	printf "\033[0;31mTHE KERNEL CMDLINE DO NOT CONTAIN THE PARAMETERS THAT ARE IN\033[0m\n"
	printf "\033[0;31mTHE CHKCRYPTOBOOT CONFIGURATION\033[0m\n"
	printf "\033[0;31mTHIS INDICATES THE BOOT LOADER CONFIGURATION WAS PROBABLY BYPASSED\033[0m\n"
	return 1
}

warning_confirm ()
{
	while true; do
		printf "\033[0;31mYOU ARE STRONGLY ADVISED NOT TO ENTER YOUR ROOT CONTAINER PASSWORD\033[0m"
		printf "\n\n"
		printf "type uppercase yes to continue: "
		read YES
		if [ $YES = YES ]; then
			break
		fi
	done
}



run_hook ()
{
	if [ -s /etc/chkcryptoboot/chkcryptoboot.conf ]; then
		source /etc/chkcryptoboot/chkcryptoboot.conf
		if [ $BOOTMODE = "mbr" ]; then
			check_mbr
			mbr_check=$?
			check_core
			core_check=$?
			check_cmdline
			if [ $mbr_check -ne 0 -o $core_check -ne 0 -o $? -ne 0 ]; then
				warning_confirm
			fi
		elif [ $BOOTMODE = "efi" ]; then
			check_efi
			efi_check=$?
			check_cmdline
			if [ $efi_check -ne 0 -o $? -ne 0 ]; then
				warning_confirm
			fi
		else
			printf "\n\033[0;33mWARNING:\033[0m the chkcryptoboot configuration contains errors"
			printf "\n\n"
			warning_confirm
		fi
	fi
}

run_cleanuphook ()
{
	if [ -s /etc/chkcryptoboot/chkcryptoboot.conf ]; then
		source /etc/chkcryptoboot/chkcryptoboot.conf
		if [ $BOOTMODE = "efi" ]; then
			if [ -n $ESP_DIR ]; then
				umount $ESP_DIR
			fi
		fi
	fi
}
